<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1055px" preserveAspectRatio="none" style="width:665px;height:1055px;" version="1.1" viewBox="0 0 665 1055" width="665px" zoomAndPan="magnify"><defs><filter height="300%" id="f1a9q8y6napful" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--class Interval--><rect fill="#FEFECE" filter="url(#f1a9q8y6napful)" height="338.5547" id="Interval" style="stroke: #A80036; stroke-width: 1.5;" width="187" x="38" y="487"/><ellipse cx="107.75" cy="503" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M110.5156,498.875 Q110.6719,498.6563 110.8594,498.5469 Q111.0469,498.4375 111.2656,498.4375 Q111.6406,498.4375 111.875,498.7031 Q112.1094,498.9531 112.1094,499.5625 L112.1094,501.0156 Q112.1094,501.625 111.875,501.8906 Q111.6406,502.1563 111.2656,502.1563 Q110.9219,502.1563 110.7188,501.9531 Q110.5156,501.7656 110.4063,501.25 Q110.3594,500.8906 110.1719,500.7031 Q109.8438,500.3281 109.2344,500.1094 Q108.625,499.8906 108,499.8906 Q107.2344,499.8906 106.5938,500.2188 Q105.9688,500.5469 105.4688,501.2969 Q104.9844,502.0469 104.9844,503.0781 L104.9844,504.1719 Q104.9844,505.4063 105.875,506.2344 Q106.7656,507.0469 108.3594,507.0469 Q109.2969,507.0469 109.9531,506.7969 Q110.3438,506.6406 110.7656,506.2031 Q111.0313,505.9375 111.1719,505.8594 Q111.3281,505.7813 111.5313,505.7813 Q111.8594,505.7813 112.1094,506.0469 Q112.375,506.2969 112.375,506.6406 Q112.375,506.9844 112.0313,507.3906 Q111.5313,507.9688 110.7344,508.2969 Q109.6563,508.75 108.3594,508.75 Q106.8438,508.75 105.6406,508.125 Q104.6563,507.625 103.9688,506.5625 Q103.2813,505.4844 103.2813,504.2031 L103.2813,503.0469 Q103.2813,501.7188 103.8906,500.5781 Q104.5156,499.4219 105.6094,498.8125 Q106.7031,498.1875 107.9375,498.1875 Q108.6719,498.1875 109.3125,498.3594 Q109.9688,498.5156 110.5156,498.875 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="39" x="128.25" y="507.9102">Interval</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="39" x2="224" y1="519" y2="519"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="51" x="44" y="534.4189">double min</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="55" x="44" y="548.2549">double max</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="39" x2="224" y1="554.6719" y2="554.6719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="155" x="44" y="570.0908">Interval(double min, double max)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="43" x="44" y="583.9268">Interval()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="116" x="44" y="597.7627">Interval(Interval interval)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="74" x="44" y="611.5986">double getMin()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="78" x="44" y="625.4346">double getMax()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="119" x="44" y="639.2705">void set(Interval interval)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="154" x="44" y="653.1064">boolean equals(Interval interval)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="44" y="666.9424">double length()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="111" x="44" y="680.7783">double getMiddlePoint()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="44" y="694.6143">Interval copy()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="44" y="708.4502">Interval symetric()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="122" x="44" y="722.2861">void shift(double amount)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="44" y="736.1221">void scale(double factor)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="150" x="44" y="749.958">boolean includes(double value)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="44" y="763.7939">boolean includes(Interval interval)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="175" x="44" y="777.6299">Interval intersection(Interval interval)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="149" x="44" y="791.4658">Interval shifted(double amount)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="53" x="44" y="805.3018">void read()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="76" x="44" y="819.1377">String toString()</text><!--class Iterator--><rect fill="#FEFECE" filter="url(#f1a9q8y6napful)" height="103.3438" id="Iterator" style="stroke: #A80036; stroke-width: 1.5;" width="117" x="129" y="324"/><ellipse cx="165.15" cy="340" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M167.9156,335.875 Q168.0719,335.6563 168.2594,335.5469 Q168.4469,335.4375 168.6656,335.4375 Q169.0406,335.4375 169.275,335.7031 Q169.5094,335.9531 169.5094,336.5625 L169.5094,338.0156 Q169.5094,338.625 169.275,338.8906 Q169.0406,339.1563 168.6656,339.1563 Q168.3219,339.1563 168.1188,338.9531 Q167.9156,338.7656 167.8063,338.25 Q167.7594,337.8906 167.5719,337.7031 Q167.2438,337.3281 166.6344,337.1094 Q166.025,336.8906 165.4,336.8906 Q164.6344,336.8906 163.9938,337.2188 Q163.3688,337.5469 162.8688,338.2969 Q162.3844,339.0469 162.3844,340.0781 L162.3844,341.1719 Q162.3844,342.4063 163.275,343.2344 Q164.1656,344.0469 165.7594,344.0469 Q166.6969,344.0469 167.3531,343.7969 Q167.7438,343.6406 168.1656,343.2031 Q168.4313,342.9375 168.5719,342.8594 Q168.7281,342.7813 168.9313,342.7813 Q169.2594,342.7813 169.5094,343.0469 Q169.775,343.2969 169.775,343.6406 Q169.775,343.9844 169.4313,344.3906 Q168.9313,344.9688 168.1344,345.2969 Q167.0563,345.75 165.7594,345.75 Q164.2438,345.75 163.0406,345.125 Q162.0563,344.625 161.3688,343.5625 Q160.6813,342.4844 160.6813,341.2031 L160.6813,340.0469 Q160.6813,338.7188 161.2906,337.5781 Q161.9156,336.4219 163.0094,335.8125 Q164.1031,335.1875 165.3375,335.1875 Q166.0719,335.1875 166.7125,335.3594 Q167.3688,335.5156 167.9156,335.875 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="38" x="183.85" y="344.9102">Iterator</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="130" x2="245" y1="356" y2="356"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="63" x="135" y="371.4189">Node current</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="130" x2="245" y1="377.8359" y2="377.8359"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="105" x="135" y="393.2549">Iterator(Node current)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="89" x="135" y="407.0908">boolean hasNext()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="67" x="135" y="420.9268">Interval next()</text><!--class List--><rect fill="#FEFECE" filter="url(#f1a9q8y6napful)" height="255.5391" id="List" style="stroke: #A80036; stroke-width: 1.5;" width="174" x="190.5" y="8"/><ellipse cx="263.25" cy="24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M266.0156,19.875 Q266.1719,19.6563 266.3594,19.5469 Q266.5469,19.4375 266.7656,19.4375 Q267.1406,19.4375 267.375,19.7031 Q267.6094,19.9531 267.6094,20.5625 L267.6094,22.0156 Q267.6094,22.625 267.375,22.8906 Q267.1406,23.1563 266.7656,23.1563 Q266.4219,23.1563 266.2188,22.9531 Q266.0156,22.7656 265.9063,22.25 Q265.8594,21.8906 265.6719,21.7031 Q265.3438,21.3281 264.7344,21.1094 Q264.125,20.8906 263.5,20.8906 Q262.7344,20.8906 262.0938,21.2188 Q261.4688,21.5469 260.9688,22.2969 Q260.4844,23.0469 260.4844,24.0781 L260.4844,25.1719 Q260.4844,26.4063 261.375,27.2344 Q262.2656,28.0469 263.8594,28.0469 Q264.7969,28.0469 265.4531,27.7969 Q265.8438,27.6406 266.2656,27.2031 Q266.5313,26.9375 266.6719,26.8594 Q266.8281,26.7813 267.0313,26.7813 Q267.3594,26.7813 267.6094,27.0469 Q267.875,27.2969 267.875,27.6406 Q267.875,27.9844 267.5313,28.3906 Q267.0313,28.9688 266.2344,29.2969 Q265.1563,29.75 263.8594,29.75 Q262.3438,29.75 261.1406,29.125 Q260.1563,28.625 259.4688,27.5625 Q258.7813,26.4844 258.7813,25.2031 L258.7813,24.0469 Q258.7813,22.7188 259.3906,21.5781 Q260.0156,20.4219 261.1094,19.8125 Q262.2031,19.1875 263.4375,19.1875 Q264.1719,19.1875 264.8125,19.3594 Q265.4688,19.5156 266.0156,19.875 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="20" x="283.75" y="28.9102">List</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="191.5" x2="363.5" y1="40" y2="40"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="47" x="196.5" y="55.4189">Node first</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="45" x="196.5" y="69.2549">Node last</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="191.5" x2="363.5" y1="75.6719" y2="75.6719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="25" x="196.5" y="91.0908">List()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="196.5" y="104.9268">Node getFirst()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="72" x="196.5" y="118.7627">Node getLast()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="196.5" y="132.5986">void setFirst(Node first)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="109" x="196.5" y="146.4346">void setEnd(Node last)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="86" x="196.5" y="160.2705">boolean isEmpty()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="196.5" y="174.1064">void insertFirst(Interval interval)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="196.5" y="187.9424">void insertLast(Interval interval)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="196.5" y="201.7783">Interval removeFirst()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="103" x="196.5" y="215.6143">Interval removeLast()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="196.5" y="229.4502">boolean includes(Interval interval)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="94" x="196.5" y="243.2861">Iterator getIterator()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="64" x="196.5" y="257.1221">void writeln()</text><!--class Node--><rect fill="#FEFECE" filter="url(#f1a9q8y6napful)" height="158.6875" id="Node" style="stroke: #A80036; stroke-width: 1.5;" width="251" x="6" y="886"/><ellipse cx="112.25" cy="902" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M115.0156,897.875 Q115.1719,897.6563 115.3594,897.5469 Q115.5469,897.4375 115.7656,897.4375 Q116.1406,897.4375 116.375,897.7031 Q116.6094,897.9531 116.6094,898.5625 L116.6094,900.0156 Q116.6094,900.625 116.375,900.8906 Q116.1406,901.1563 115.7656,901.1563 Q115.4219,901.1563 115.2188,900.9531 Q115.0156,900.7656 114.9063,900.25 Q114.8594,899.8906 114.6719,899.7031 Q114.3438,899.3281 113.7344,899.1094 Q113.125,898.8906 112.5,898.8906 Q111.7344,898.8906 111.0938,899.2188 Q110.4688,899.5469 109.9688,900.2969 Q109.4844,901.0469 109.4844,902.0781 L109.4844,903.1719 Q109.4844,904.4063 110.375,905.2344 Q111.2656,906.0469 112.8594,906.0469 Q113.7969,906.0469 114.4531,905.7969 Q114.8438,905.6406 115.2656,905.2031 Q115.5313,904.9375 115.6719,904.8594 Q115.8281,904.7813 116.0313,904.7813 Q116.3594,904.7813 116.6094,905.0469 Q116.875,905.2969 116.875,905.6406 Q116.875,905.9844 116.5313,906.3906 Q116.0313,906.9688 115.2344,907.2969 Q114.1563,907.75 112.8594,907.75 Q111.3438,907.75 110.1406,907.125 Q109.1563,906.625 108.4688,905.5625 Q107.7813,904.4844 107.7813,903.2031 L107.7813,902.0469 Q107.7813,900.7188 108.3906,899.5781 Q109.0156,898.4219 110.1094,897.8125 Q111.2031,897.1875 112.4375,897.1875 Q113.1719,897.1875 113.8125,897.3594 Q114.4688,897.5156 115.0156,897.875 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="30" x="132.75" y="906.9102">Node</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="256" y1="918" y2="918"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="70" x="12" y="933.4189">Node previous</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="49" x="12" y="947.2549">Node next</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="256" y1="953.6719" y2="953.6719"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="239" x="12" y="969.0908">Node(Node previous, Interval interval, Node mext)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="93" x="12" y="982.9268">Node getPrevious()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="73" x="12" y="996.7627">Node getNext()</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="158" x="12" y="1010.5986">void setPrevious(Node previous)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="12" y="1024.4346">void setNext(Node next)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="96" x="12" y="1038.2705">Interval getInterval()</text><!--class SentinelList--><rect fill="#FEFECE" filter="url(#f1a9q8y6napful)" height="61.8359" id="SentinelList" style="stroke: #A80036; stroke-width: 1.5;" width="174" x="281.5" y="344.5"/><ellipse cx="331.75" cy="360.5" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M334.5156,356.375 Q334.6719,356.1563 334.8594,356.0469 Q335.0469,355.9375 335.2656,355.9375 Q335.6406,355.9375 335.875,356.2031 Q336.1094,356.4531 336.1094,357.0625 L336.1094,358.5156 Q336.1094,359.125 335.875,359.3906 Q335.6406,359.6563 335.2656,359.6563 Q334.9219,359.6563 334.7188,359.4531 Q334.5156,359.2656 334.4063,358.75 Q334.3594,358.3906 334.1719,358.2031 Q333.8438,357.8281 333.2344,357.6094 Q332.625,357.3906 332,357.3906 Q331.2344,357.3906 330.5938,357.7188 Q329.9688,358.0469 329.4688,358.7969 Q328.9844,359.5469 328.9844,360.5781 L328.9844,361.6719 Q328.9844,362.9063 329.875,363.7344 Q330.7656,364.5469 332.3594,364.5469 Q333.2969,364.5469 333.9531,364.2969 Q334.3438,364.1406 334.7656,363.7031 Q335.0313,363.4375 335.1719,363.3594 Q335.3281,363.2813 335.5313,363.2813 Q335.8594,363.2813 336.1094,363.5469 Q336.375,363.7969 336.375,364.1406 Q336.375,364.4844 336.0313,364.8906 Q335.5313,365.4688 334.7344,365.7969 Q333.6563,366.25 332.3594,366.25 Q330.8438,366.25 329.6406,365.625 Q328.6563,365.125 327.9688,364.0625 Q327.2813,362.9844 327.2813,361.7031 L327.2813,360.5469 Q327.2813,359.2188 327.8906,358.0781 Q328.5156,356.9219 329.6094,356.3125 Q330.7031,355.6875 331.9375,355.6875 Q332.6719,355.6875 333.3125,355.8594 Q333.9688,356.0156 334.5156,356.375 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="65" x="352.25" y="365.4102">SentinelList</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="282.5" x2="454.5" y1="376.5" y2="376.5"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="282.5" x2="454.5" y1="384.5" y2="384.5"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="162" x="287.5" y="399.9189">boolean includes(Interval interval)</text><!--class Set--><rect fill="#FEFECE" filter="url(#f1a9q8y6napful)" height="103.3438" id="Set" style="stroke: #A80036; stroke-width: 1.5;" width="164" x="490.5" y="324"/><ellipse cx="559.25" cy="340" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M562.0156,335.875 Q562.1719,335.6563 562.3594,335.5469 Q562.5469,335.4375 562.7656,335.4375 Q563.1406,335.4375 563.375,335.7031 Q563.6094,335.9531 563.6094,336.5625 L563.6094,338.0156 Q563.6094,338.625 563.375,338.8906 Q563.1406,339.1563 562.7656,339.1563 Q562.4219,339.1563 562.2188,338.9531 Q562.0156,338.7656 561.9063,338.25 Q561.8594,337.8906 561.6719,337.7031 Q561.3438,337.3281 560.7344,337.1094 Q560.125,336.8906 559.5,336.8906 Q558.7344,336.8906 558.0938,337.2188 Q557.4688,337.5469 556.9688,338.2969 Q556.4844,339.0469 556.4844,340.0781 L556.4844,341.1719 Q556.4844,342.4063 557.375,343.2344 Q558.2656,344.0469 559.8594,344.0469 Q560.7969,344.0469 561.4531,343.7969 Q561.8438,343.6406 562.2656,343.2031 Q562.5313,342.9375 562.6719,342.8594 Q562.8281,342.7813 563.0313,342.7813 Q563.3594,342.7813 563.6094,343.0469 Q563.875,343.2969 563.875,343.6406 Q563.875,343.9844 563.5313,344.3906 Q563.0313,344.9688 562.2344,345.2969 Q561.1563,345.75 559.8594,345.75 Q558.3438,345.75 557.1406,345.125 Q556.1563,344.625 555.4688,343.5625 Q554.7813,342.4844 554.7813,341.2031 L554.7813,340.0469 Q554.7813,338.7188 555.3906,337.5781 Q556.0156,336.4219 557.1094,335.8125 Q558.2031,335.1875 559.4375,335.1875 Q560.1719,335.1875 560.8125,335.3594 Q561.4688,335.5156 562.0156,335.875 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="18" x="579.75" y="344.9102">Set</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="491.5" x2="653.5" y1="356" y2="356"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="491.5" x2="653.5" y1="364" y2="364"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="496.5" y="379.4189">void insertFirst(Interval interval)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="152" x="496.5" y="393.2549">void insertLast(Interval interval)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="87" x="496.5" y="407.0908">Set union(Set set)</text><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="117" x="496.5" y="420.9268">Set intersection(Set set)</text><!--link Interval to Node--><path d="M131.5,846.53 C131.5,860.2 131.5,873.47 131.5,885.88 " fill="none" id="Interval-Node" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="124.5,846.27,131.5,826.27,138.5,846.27,124.5,846.27" style="stroke: #A80036; stroke-width: 1.0;"/><!--link List to SentinelList--><path d="M333.41,282.91 C342.28,306.07 350.6,327.78 356.91,344.24 " fill="none" id="List-SentinelList" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="326.82,285.27,326.2,264.09,339.89,280.26,326.82,285.27" style="stroke: #A80036; stroke-width: 1.0;"/><!--link List to Set--><path d="M380.4,219.85 C423.49,254.54 472.19,293.74 509.77,323.99 " fill="none" id="List-Set" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="none" points="376,225.29,364.81,207.29,384.78,214.38,376,225.29" style="stroke: #A80036; stroke-width: 1.0;"/><!--link Iterator to Interval--><path d="M177.36,427.02 C174.12,443.17 170.33,462.03 166.35,481.89 " fill="none" id="Iterator-Interval" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="165.33,486.95,171.0038,478.8997,166.3023,482.0455,163.1566,477.344,165.33,486.95" style="stroke: #A80036; stroke-width: 1.0;"/><!--link List to Interval--><path d="M190.14,210.06 C159.11,241.53 127.84,280.98 111.5,324 C92.76,373.34 89.98,429.79 94.14,481.95 " fill="none" id="List-Interval" style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 7.0,7.0;"/><polygon fill="#A80036" points="94.57,486.98,97.811,477.6797,94.156,481.9972,89.8385,478.3421,94.57,486.98" style="stroke: #A80036; stroke-width: 1.0;"/><!--link List to Iterator--><path d="M224.66,276.44 C220.07,288.55 215.6,300.36 211.43,311.35 " fill="none" id="List-Iterator" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="206.7,323.84,213.6334,316.8451,208.4743,319.1654,206.154,314.0063,206.7,323.84" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="208.4743" x2="211.305" y1="319.1654" y2="311.685"/><polygon fill="#A80036" points="229.34,264.09,223.4755,268.2861,225.0933,275.3134,230.9578,271.1173,229.34,264.09" style="stroke: #A80036; stroke-width: 1.0;"/><!--
@startuml

class Interval {
	double min
	double max
	 Interval(double min, double max)
	 Interval()
	 Interval(Interval interval)
	 double getMin()
	 double getMax()
	 void set(Interval interval)
	 boolean equals(Interval interval)
	 double length()
	 double getMiddlePoint()
	 Interval copy()
	 Interval symetric()
	 void shift(double amount)
	 void scale(double factor)
	 boolean includes(double value)
	 boolean includes(Interval interval)
	 Interval intersection(Interval interval)
	 Interval shifted(double amount)
	 void read()
	 String toString()
}

class Iterator {
	 Node current
	 Iterator(Node current)
	 boolean hasNext()
	 Interval next()
}

class List {
	 Node first
	 Node last
	 List()
	 Node getFirst()
	 Node getLast()
	 void setFirst(Node first)
	 void setEnd(Node last)
	 boolean isEmpty()
	 void insertFirst(Interval interval)
	 void insertLast(Interval interval)
	 Interval removeFirst()
	 Interval removeLast()
	 boolean includes(Interval interval)
	 Iterator getIterator()
	 void writeln()
}

class Node extends Interval {
	 Node previous
	 Node next
	 Node(Node previous, Interval interval, Node mext)
	 Node getPrevious()
	 Node getNext()
	 void setPrevious(Node previous)
	 void setNext(Node next)
	 Interval getInterval()
}

class SentinelList extends List {
	 boolean includes(Interval interval)
}

class Set extends List {
	 void insertFirst(Interval interval)
	 void insertLast(Interval interval)
	 Set union(Set set)
	 Set intersection(Set set)
}

Iterator -down-> Interval
List .down.> Interval
List *-down-> Iterator
@enduml

PlantUML version 1.2019.05(Sat Apr 20 18:45:36 CEST 2019)
(GPL source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Java Version: 11.0.14+8-LTS-263
Operating System: Windows 10
OS Version: 10.0
Default Encoding: windows-1252
Language: es
Country: ES
--></g></svg>